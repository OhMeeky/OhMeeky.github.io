{"version":3,"sources":["components/Home.js","components/PostThings/Post.js","components/PostThings/PostList.js","components/PostThings/ViewPost.js","components/PostThings/ViewPostList.js","components/PostThings/PostComp.js","components/PostThings/PostFilter.js","components/LogIn/LogIn.js","App.js","reportWebVitals.js","index.js"],"names":["Home","insertLink","loginLink","isLoggedIn","setIsLoggedIn","to","className","onClick","alert","Post","text","desc","post","handleDelete","match","useRouteMatch","textTitle","Math","random","toString","replace","link","id","url","PostList","setPost","filter","includes","map","ViewPost","PostComp","setInputText","inputText","inputTextDesc","setInputTextDesc","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","required","PostFilter","setFilter","LogIn","history","useHistory","push","App","useState","exact","path","newPost","ViewPostList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAoCeA,MAhCf,YAA4C,IAQpCC,EACAC,EATOC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,cAoBvB,OAVID,GAKAD,EAAY,cAAC,IAAD,CAAMG,GAAG,IAAIC,UAAU,gBAAgBC,QAZlC,WACjBH,GAAc,GACdI,MAAM,gCAUM,oBACZP,EAAa,cAAC,IAAD,CAAMI,GAAG,QAAQC,UAAU,eAA3B,2BALbJ,EAAY,cAAC,IAAD,CAAMG,GAAG,SAASC,UAAU,gBAA5B,oBACZL,EAAa,cAAC,IAAD,CAAMI,GAAG,IAAIC,UAAU,eAAeC,QAAS,kBAAMC,MAAM,wCAA3D,0BASb,8BACI,yBAAQF,UAAU,SAAlB,UACI,oBAAIA,UAAU,aAAd,mBACA,cAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,eAAvB,kBACCJ,EACAD,QCAFQ,MA5BX,YAAmD,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,aAE1BC,EAAQC,cAMNC,IAJqB,EAAhBC,KAAKC,UACGC,WAGDT,EAAKU,QAAQ,KAAM,MAC/BC,EAAI,UAAML,GAIhB,OACI,qCACI,wBAAQT,QAAS,kBAAMM,EAAaD,EAAKU,KAAzC,oBACA,cAAC,IAAD,CAAMjB,GAAE,UAAKS,EAAMS,KAAX,OAAiBF,GAASf,UAAU,OAA5C,SACI,8BACI,gCACI,yCAAYI,KACZ,wCAAWC,gBCDxBa,MAnBf,YAAiE,IAA9CZ,EAA6C,EAA7CA,KAAMa,EAAuC,EAAvCA,QAASZ,EAA8B,EAA9BA,aAAca,EAAgB,EAAhBA,OAI5C,OAJ4D,EAARhB,KAKhD,8BACI,6BAEQE,EAAKc,QAAO,SAAAd,GAAI,OAAIA,EAAKF,KAAKiB,SAASD,IAAsB,KAAXA,KAC7CE,KAAI,SAAChB,GAAD,OACD,cAAC,EAAD,CAAMa,QAASA,EAASb,KAAMA,EAAMF,KAAME,EAAKF,KAAoBC,KAAMC,EAAKD,KAAME,aAAcA,GAAxCD,EAAKU,YCD5EO,MATf,YAAmC,IAAfnB,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACtB,OACI,sBAAKL,UAAU,oBAAf,UACI,yCAAYI,KACZ,wCAAWC,SCWRa,MAff,YAA6B,IAATZ,EAAQ,EAARA,KAEhB,OACI,8BACI,6BACKA,EAAKgB,KAAI,SAAChB,GAAD,OACN,cAAC,EAAD,CAAUF,KAAME,EAAKF,KAAoBC,KAAMC,EAAKD,MAApBC,EAAKU,Y,QC8B1CQ,EAtCE,SAAC,GAA+E,IAA9EC,EAA6E,EAA7EA,aAAcnB,EAA+D,EAA/DA,KAAMa,EAAyD,EAAzDA,QAASO,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,iBAyBtE,OACI,qBAAK5B,UAAU,gBAAf,SACI,uBAAM6B,SAdK,SAACC,GAChBA,EAAEC,iBACFZ,EAAQ,GAAD,mBACAb,GADA,CAEH,CAAEF,KAAMsB,EAAWrB,KAAMsB,EAAeX,GAAoB,EAAhBL,KAAKC,aAErDa,EAAa,IACbG,EAAiB,KAOe5B,UAAU,WAAtC,UACI,uBAAOA,UAAU,aAAagC,KAAK,OAAOC,MAAOP,EAAWQ,SAzBxE,SAA2BJ,GACvBL,EAAaK,EAAEK,OAAOF,QAwB0EG,YAAY,QAAQC,UAAQ,IADxH,IAC4H,uBACxH,uBAAOrC,UAAU,aAAagC,KAAK,OAAOC,MAAON,EAAeO,SAvB5E,SAA8BJ,GAC1BF,EAAiBE,EAAEK,OAAOF,QAsB8EG,YAAY,OAAOC,UAAQ,IAF/H,IAEmI,uBAC/H,wBAAQrC,UAAU,UAAlB,SACI,+CCfLsC,MAhBf,YAA+C,EAA1BlC,KAA2B,IAArBgB,EAAoB,EAApBA,OAAQmB,EAAY,EAAZA,UAS/B,OACI,qBAAKvC,UAAU,cAAf,SACK,uBAAOgC,KAAK,OAAOE,SAP3B,SAA2BJ,GACxBS,EAAUT,EAAEK,OAAOF,QAMiCA,MAAOb,EAAQgB,YAAY,gBCaxEI,MAtBf,YAAiC,IAAjB1C,EAAgB,EAAhBA,cAGN2C,EAAUC,cAQhB,OACI,qBAAK1C,UAAU,iBAAf,SACI,uBAAM6B,SARO,SAACC,GAClBA,EAAEC,iBACFjC,GAAc,GACd2C,EAAQE,KAAK,MAKT,UACI,uBAAOX,KAAK,OAAOI,YAAY,OAAOC,UAAQ,IADlD,IACsD,uBAAS,uBAC3D,uBAAOL,KAAK,WAAYI,YAAY,WAAWC,UAAQ,IAF3D,IAE+D,uBAAS,uBACpE,kD,MC2DDO,MAvDf,WAAgB,IAAD,IAE6BC,mBAAS,IAFtC,mBAENlB,EAFM,KAESC,EAFT,OAGqBiB,mBAAS,IAH9B,mBAGNnB,EAHM,KAGKD,EAHL,OAIWoB,mBAAS,IAJpB,mBAINvC,EAJM,KAIAa,EAJA,OAKuB0B,oBAAS,GALhC,mBAKNhD,EALM,KAKMC,EALN,OAMe+C,mBAAS,IANxB,mBAMNzB,EANM,KAMEmB,EANF,KAgBb,OACE,sBAAKvC,UAAU,MAAf,UACE,cAAC,EAAD,CAAOH,WAAYA,EAAYC,cAAeA,IAE9C,cAAC,IAAD,UACE,qBAAKE,UAAU,aAAf,SACI,eAAC,IAAD,WACE,eAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,EAAD,CAAa3B,OAAQA,EAAQmB,UAAWA,IAExC,cAAC,GAAD,GAAUnC,KAAMsB,EAAWN,OAAQA,GAAnC,qBAAiDM,GAAjD,qBAAkEpB,GAAlE,wBAAiFa,GAAjF,8BAlBO,SAACH,GACpB,IAAMgC,EAAU1C,EAAKc,QAAO,SAAAd,GAAI,OAAIA,EAAKU,KAAOA,KAChDG,EAAQ6B,MAgBI,IAHF,SAMA,cAAC,IAAD,CAAOD,KAAK,QAAZ,SAEE,cAAC,EAAD,CAAUzC,KAAMA,EACZa,QAASA,EACTO,UAAWA,EACXD,aAAcA,EACdE,cAAeA,EACfC,iBAAkBA,MAGxB,cAAC,IAAD,CAAOmB,KAAK,SAAZ,SACE,cAAC,EAAD,CAAOlD,WAAYA,EAAYC,cAAeA,MAGhD,cAAC,IAAD,CAAOiD,KAAK,SAAZ,SACE,cAACE,EAAD,CAAc3C,KAAMA,iBCtDrB4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f95568b7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Home({isLoggedIn, setIsLoggedIn}) { \r\n\r\n\r\n    const handleLogOut = () => {\r\n        setIsLoggedIn(false);\r\n        alert(\"You logged out successfully\")\r\n    }\r\n\r\n    let insertLink;\r\n    let loginLink;\r\n    if(!isLoggedIn) { \r\n        loginLink = <Link to=\"/logIn\" className=\"homeLinkLogIn\">Log in</Link>\r\n        insertLink = <Link to=\"/\" className=\"homeLinkHome\" onClick={() => alert(\"You need to login to post something\") } >Insert Post</Link>\r\n        \r\n    } else {\r\n        loginLink = <Link to=\"/\" className=\"homeLinkLogIn\" onClick={handleLogOut} >Logout</Link>\r\n        insertLink = <Link to=\"/Post\" className=\"homeLinkHome\">Insert Post</Link>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"Header\">\r\n                <h1 className=\"homeTopStr\">title</h1>\r\n                <Link to=\"/\" className=\"homeLinkPost\">Home</Link>\r\n                {loginLink}\r\n                {insertLink}\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import  { Link, useRouteMatch } from 'react-router-dom';\r\n\r\n    function Post({ text, desc, post, handleDelete }) {\r\n        // TEXT = TITLE\r\n        let match = useRouteMatch();\r\n\r\n        let rand = Math.random() * 7;\r\n        let randStr = rand.toString();\r\n        const postId = randStr + text;\r\n\r\n        const textTitle = text.replace(/ /g, \"-\")\r\n        const link = `${textTitle}`;\r\n        \r\n        \r\n\r\n        return (\r\n            <>\r\n                <button onClick={() => handleDelete(post.id) } >Delete</button>\r\n                <Link to={`${match.url}${link}`}  className=\"post\"> \r\n                    <div>\r\n                        <div>\r\n                            <h3>Title: {text}</h3>\r\n                            <h3>Desc: {desc}</h3>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </>\r\n        )\r\n    }\r\n\r\nexport default Post\r\n","import Post from './Post';\r\n\r\nfunction PostList({post, setPost, handleDelete, filter, text }) {\r\n\r\n  \r\n    \r\n    return (\r\n        <div>\r\n            <ul>\r\n                \r\n                   {post.filter(post => post.text.includes(filter) || filter === '' )\r\n                        .map((post) =>(\r\n                            <Post setPost={setPost} post={post} text={post.text} key={post.id} desc={post.desc} handleDelete={handleDelete} />\r\n                        )) \r\n                    }\r\n            </ul>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default PostList\r\n","\r\n\r\nfunction ViewPost({ text, desc }) {\r\n    return (\r\n        <div className=\"viewPostContainer\" >\r\n            <h2>Title: {text}</h2>\r\n            <h3>Desc: {desc}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPost\r\n","import ViewPost from './ViewPost';\r\n\r\nfunction PostList({ post }) {\r\n    \r\n    return (\r\n        <div>\r\n            <ul>\r\n                {post.map((post) =>(\r\n                    <ViewPost text={post.text} key={post.id} desc={post.desc} />\r\n                ))}\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default PostList\r\n","const PostComp = ({setInputText, post, setPost, inputText, inputTextDesc, setInputTextDesc}) => {\r\n\r\n\r\n    function inputTextHandler (e)  {\r\n        setInputText(e.target.value)  \r\n    }\r\n    function inputTextHandlerDesc(e) {\r\n        setInputTextDesc(e.target.value)\r\n    }\r\n    \r\n\r\n\r\n\r\n    const submitForm = (e) => {  \r\n        e.preventDefault();\r\n        setPost([\r\n            ...post, \r\n            { text: inputText, desc: inputTextDesc, id: Math.random() * 7},\r\n        ]);\r\n        setInputText('');\r\n        setInputTextDesc('');\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"postContainer\">\r\n            <form onSubmit={submitForm} className=\"postForm\">\r\n                <input className=\"inputField\" type=\"text\" value={inputText} onChange={inputTextHandler} placeholder=\"Title\" required /> <br></br>\r\n                <input className=\"inputField\" type=\"text\" value={inputTextDesc} onChange={inputTextHandlerDesc} placeholder=\"Desc\" required /> <br></br>\r\n                <button className=\"postBtn\">\r\n                    <i>Submit</i>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComp\r\n","function PostFilter({text, filter, setFilter}) {\r\n\r\n\r\n\r\n     function inputTextHandler (e)  {\r\n        setFilter(e.target.value)  \r\n     }\r\n\r\n   \r\n    return (\r\n        <div className=\"post-filter\" >\r\n             <input type=\"text\" onChange={inputTextHandler} value={filter} placeholder=\"Search..\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostFilter\r\n","import { useHistory } from 'react-router-dom'\r\n\r\nfunction LogIn({setIsLoggedIn}) {\r\n\r\n\r\n    const history = useHistory()\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setIsLoggedIn(true)\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"logInContainer\" >\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" placeholder=\"Nome\" required /> <br></br><br></br>\r\n                <input type=\"password\"  placeholder=\"Password\" required /> <br></br><br></br>\r\n                <button>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogIn\r\n","import { useState, useEffect } from 'react';\n\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Home from './components/Home';\nimport PostList from './components/PostThings/PostList';\nimport ViewPostList from './components/PostThings/ViewPostList';\nimport PostComp from './components/PostThings/PostComp';\nimport PostFilter from './components/PostThings/PostFilter';\n\nimport LogIn from './components/LogIn/LogIn'\n\nimport LateralBar from './components/LateralBar'\n\n// import Fetch from './components/Fetch';\n\n\n\n\n\nimport './App.css';\n\nfunction App() {\n\n  const [inputTextDesc, setInputTextDesc] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [post, setPost] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [filter, setFilter] = useState('');\n\n  const handleDelete = (id) => {\n    const newPost = post.filter(post => post.id !== id);\n    setPost(newPost);\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <Home  isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn}/>\n      \n      <Router>\n        <div className=\"App-Router\" > \n            <Switch>\n              <Route exact path=\"/\">\n                <PostFilter  filter={filter} setFilter={setFilter} />\n                {/* <LateralBar /> */}\n               {<PostList text={inputText} filter={filter} text={inputText} post={post} setPost={setPost} handleDelete={handleDelete} /> }   {/*POST RENDERED HERE */}\n                \n              </Route>\n              <Route path=\"/post\">\n                {/* POSTCOMP IS THE INPUT AND THAT STUFF FIELD */}\n                <PostComp post={post}\n                    setPost={setPost}\n                    inputText={inputText}\n                    setInputText={setInputText}\n                    inputTextDesc={inputTextDesc}\n                    setInputTextDesc={setInputTextDesc}/>\n              </Route>\n              \n              <Route path=\"/login\" >\n                <LogIn isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn}/>\n              </Route>\n              \n              <Route path=\"/:post\">\n                <ViewPostList post={post} />\n              </Route>\n              \n            </Switch>\n          </div>\n        </Router>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { HashRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}