{"version":3,"sources":["components/Home.js","components/PostThings/Post.js","components/PostThings/PostList.js","components/PostThings/ViewPost.js","components/PostThings/ViewPostList.js","components/PostThings/PostComp.js","components/PostThings/PostFilter.js","components/UserSettings.js","components/LogIn/LogIn.js","App.js","reportWebVitals.js","index.js"],"names":["Home","insertLink","loginLink","isLoggedIn","setIsLoggedIn","username","to","className","onClick","alert","Post","text","desc","inputTextLoginUsername","post","handleDelete","match","useRouteMatch","textTitle","Math","random","toString","replace","link","url","PostList","setPost","filter","includes","map","id","ViewPost","PostComp","setInputText","inputText","inputTextDesc","setInputTextDesc","history","useHistory","onSubmit","e","preventDefault","push","type","value","onChange","target","placeholder","required","PostFilter","setFilter","UserSettings","LogIn","setInputTextLoginUsername","App","useState","exact","path","newPost","ViewPostList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.942580cf.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Home({isLoggedIn, setIsLoggedIn, username}) { \r\n\r\n\r\n    const handleLogOut = () => {\r\n        setIsLoggedIn(false);\r\n        alert(\"You logged out successfully\")\r\n    }\r\n\r\n    let insertLink;\r\n    let loginLink;\r\n\r\n    \r\n    if(!isLoggedIn) { \r\n        loginLink = <Link to=\"/logIn\" className=\"homeLinkLogIn\">LogIn</Link>\r\n        insertLink = <Link to=\"/\" className=\"homeLinkHome\" onClick={() => alert(\"You need to login to post something\") } >Insert-Post</Link>\r\n        \r\n    } else {\r\n        loginLink = <Link to=\"/\" className=\"homeLinkLogIn\" onClick={handleLogOut} >Logout</Link>\r\n        insertLink = <Link to=\"/Post\" className=\"homeLinkHome\">Insert-Post</Link>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"Header\">\r\n                <h1 className=\"homeTopStr\">title</h1>\r\n                <Link to=\"/\" className=\"homeLinkPost\">Home</Link>\r\n                {loginLink}\r\n                {insertLink}\r\n                <Link to=\"/usersettings\" className=\"homeLinkUsername\" >{username}</Link>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import  { Link, useRouteMatch } from 'react-router-dom';\r\n\r\n    function Post({ text, desc, post, handleDelete, inputTextLoginUsername }) {\r\n        // TEXT = TITLE\r\n        let match = useRouteMatch();\r\n\r\n        let rand = Math.random() * 7;\r\n        let randStr = rand.toString();\r\n        const postId = randStr + text;\r\n\r\n        const textTitle = text.replace(/ /g, \"-\")\r\n        const link = `${textTitle}`;\r\n        \r\n        \r\n\r\n        return (\r\n            <>\r\n                {/* <button onClick={() => handleDelete(post.id) }>Delete</button> */}\r\n                <Link to={`${match.url}${link}`}  className=\"post\"> \r\n                    <div>\r\n                        <div>\r\n                            <h3>{text}</h3>\r\n                            <h5>{desc}</h5>\r\n                            <h5 className=\"Author\" >Author: {inputTextLoginUsername} </h5>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </>\r\n        )\r\n    }\r\n\r\nexport default Post\r\n","import Post from './Post';\r\n\r\nfunction PostList({post, setPost, handleDelete, filter, inputTextLoginUsername }) {\r\n\r\n  \r\n    \r\n    return (\r\n        <div>\r\n            <ul>\r\n                \r\n                   {post.filter(post => post.text.includes(filter) || filter === '' )\r\n                        .map((post) =>(\r\n                            <Post inputTextLoginUsername={inputTextLoginUsername} setPost={setPost} post={post} text={post.text} key={post.id} desc={post.desc} handleDelete={handleDelete} />\r\n                        )) \r\n                    }\r\n            </ul>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default PostList\r\n","\r\n\r\nfunction ViewPost({ text, desc }) {\r\n    return (\r\n        <div className=\"viewPostContainer\" >\r\n            <h2>Title: {text}</h2>\r\n            <h3>Desc: {desc}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPost\r\n","import ViewPost from './ViewPost';\r\n\r\nfunction PostList({ post }) {\r\n    \r\n    return (\r\n        <div>\r\n            <ul>\r\n                {post.map((post) =>(\r\n                    <ViewPost text={post.text} key={post.id} desc={post.desc} />\r\n                ))}\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default PostList\r\n","\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst PostComp = ({setInputText, post, setPost, inputText, inputTextDesc, setInputTextDesc}) => {\r\n\r\n\r\n    function inputTextHandler (e)  {\r\n        setInputText(e.target.value)  \r\n    }\r\n    function inputTextHandlerDesc(e) {\r\n        setInputTextDesc(e.target.value)\r\n    }\r\n    \r\n\r\n    const history = useHistory()\r\n\r\n    const submitForm = (e) => {  \r\n        e.preventDefault();\r\n        setPost([\r\n            ...post, \r\n            { text: inputText, desc: inputTextDesc, id: Math.random() * 7},\r\n        ]);\r\n        setInputText('');\r\n        setInputTextDesc('');\r\n        history.push('/');\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"postContainer\">\r\n            <form onSubmit={submitForm} className=\"postForm\">\r\n                <input className=\"inputField\" type=\"text\" value={inputText} onChange={inputTextHandler} placeholder=\"Title\" required /> <br></br>\r\n                <input className=\"inputField\" type=\"text\" value={inputTextDesc} onChange={inputTextHandlerDesc} placeholder=\"Desc\" required /> <br></br>\r\n                <button className=\"postBtn\">\r\n                    <i>Submit</i>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComp\r\n","function PostFilter({filter, setFilter}) {\r\n\r\n\r\n\r\n     function inputTextHandler (e)  {\r\n        setFilter(e.target.value)  \r\n     }\r\n\r\n   \r\n    return (\r\n        <div className=\"post-filter\" >\r\n             <input type=\"text\" onChange={inputTextHandler} value={filter} placeholder=\"Search..\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostFilter\r\n","import React from 'react'\r\n\r\nfunction UserSettings({username}) {\r\n    return (\r\n        <div>\r\n            <h3>Nome: {username} </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSettings\r\n","import { useHistory } from 'react-router-dom'\r\n\r\nfunction LogIn({setIsLoggedIn, setInputTextLoginUsername, inputTextLoginUsername}) {\r\n\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    function inputTextHandlerUsername (e)  {\r\n        setInputTextLoginUsername(e.target.value)\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setIsLoggedIn(true)\r\n        history.push('/');\r\n        // setInputTextLoginUsername('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"logInContainer\" >\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" placeholder=\"Nome\" value={inputTextLoginUsername} onChange={inputTextHandlerUsername} required  /> <br></br><br></br>\r\n                <input type=\"password\"  placeholder=\"Password\" required  /> <br></br><br></br>\r\n                <button>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogIn\r\n","import { useState, useEffect } from 'react';\n\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Home from './components/Home';\nimport PostList from './components/PostThings/PostList';\nimport ViewPostList from './components/PostThings/ViewPostList';\nimport PostComp from './components/PostThings/PostComp';\nimport PostFilter from './components/PostThings/PostFilter';\nimport UserSettings from './components/UserSettings';\n\nimport LogIn from './components/LogIn/LogIn'\n\nimport LateralBar from './components/LateralBar'\n\n// import Fetch from './components/Fetch';\n\n\n\n\n\nimport './App.css';\n\nfunction App() {\n\n  const [inputTextDesc, setInputTextDesc] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [post, setPost] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [inputTextLoginUsername, setInputTextLoginUsername] = useState('');\n\n\n  const handleDelete = (id) => {\n    const newPost = post.filter(post => post.id !== id);\n    setPost(newPost);\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <Home  isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} username={inputTextLoginUsername} />\n      \n      <Router>\n        <div className=\"App-Router\" > \n            <Switch>\n              <Route exact path=\"/\">\n                <PostFilter  filter={filter} setFilter={setFilter} />\n                {/* <LateralBar /> */}\n               {<PostList inputTextLoginUsername={inputTextLoginUsername} text={inputText} filter={filter} text={inputText} post={post} setPost={setPost} handleDelete={handleDelete} /> }   {/*POST RENDERED HERE */}\n                \n              </Route>\n              <Route path=\"/post\">\n                {/* POSTCOMP IS THE INPUT AND THAT STUFF FIELD */}\n                <PostComp post={post}\n                    setPost={setPost}\n                    inputText={inputText}\n                    setInputText={setInputText}\n                    inputTextDesc={inputTextDesc}\n                    setInputTextDesc={setInputTextDesc}/>\n              </Route>\n              \n              <Route path=\"/login\" >\n                <LogIn isLoggedIn={isLoggedIn}\n                 setIsLoggedIn={setIsLoggedIn}\n                inputTextLoginUsername={inputTextLoginUsername}\n                setInputTextLoginUsername={setInputTextLoginUsername} />\n              </Route>\n\n              <Route path=\"/usersettings\" >\n                <UserSettings username={inputTextLoginUsername} />\n              </Route>\n              \n              <Route path=\"/:post\">\n                <ViewPostList post={post} />\n              </Route>\n\n              {/* NON METTERE COMPONENTI QUI PERCHE CI STA UNA VARIABILE  */}\n              \n            </Switch>\n          </div>\n        </Router>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { HashRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}